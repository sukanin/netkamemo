$VAR1 = bless( {
                 '_logout_on_disconnect' => 1,
                 'service_url' => 'https://172.20.11.165:443/sdk/vimService.wsdl',
                 'vim_service' => bless( {
                                           'vim_soap' => bless( {
                                                                  'user_agent' => bless( {
                                                                                           'max_redirect' => 7,
                                                                                           'conn_cache' => bless( {
                                                                                                                    'cc_limit_total' => 1,
                                                                                                                    'cc_conns' => [
                                                                                                                                    [
                                                                                                                                      bless( \*Symbol::GEN1, 'LWP::Protocol::https::Socket' ),
                                                                                                                                      'http',
                                                                                                                                      '172.20.11.165:443',
                                                                                                                                      1625199086
                                                                                                                                    ]
                                                                                                                                  ]
                                                                                                                  }, 'LWP::ConnCache' ),
                                                                                           'protocols_forbidden' => undef,
                                                                                           'show_progress' => undef,
                                                                                           'handlers' => {
                                                                                                           'request_prepare' => bless( [
                                                                                                                                         {
                                                                                                                                           'owner' => 'LWP::UserAgent::cookie_jar',
                                                                                                                                           'callback' => sub { "DUMMY" },
                                                                                                                                           'line' => 'C:/Perl/lib/LWP/UserAgent.pm:629'
                                                                                                                                         }
                                                                                                                                       ], 'HTTP::Config' ),
                                                                                                           'response_header' => bless( [
                                                                                                                                         {
                                                                                                                                           'owner' => 'LWP::UserAgent::parse_head',
                                                                                                                                           'callback' => sub { "DUMMY" },
                                                                                                                                           'm_media_type' => 'html',
                                                                                                                                           'line' => 'C:/Perl/lib/LWP/UserAgent.pm:608'
                                                                                                                                         }
                                                                                                                                       ], 'HTTP::Config' ),
                                                                                                           'response_done' => bless( [
                                                                                                                                       {
                                                                                                                                         'owner' => 'LWP::UserAgent::cookie_jar',
                                                                                                                                         'callback' => sub { "DUMMY" },
                                                                                                                                         'line' => 'C:/Perl/lib/LWP/UserAgent.pm:632'
                                                                                                                                       }
                                                                                                                                     ], 'HTTP::Config' )
                                                                                                         },
                                                                                           'no_proxy' => [],
                                                                                           'protocols_allowed' => [
                                                                                                                    'http',
                                                                                                                    'https'
                                                                                                                  ],
                                                                                           'use_eval' => 1,
                                                                                           'requests_redirectable' => [
                                                                                                                        'GET',
                                                                                                                        'HEAD'
                                                                                                                      ],
                                                                                           'timeout' => 180,
                                                                                           'cookie_jar' => bless( {
                                                                                                                    'ignore_discard' => 1,
                                                                                                                    'COOKIES' => {
                                                                                                                                   '172.20.11.165' => {
                                                                                                                                                        '/' => {
                                                                                                                                                                 'vmware_soap_session' => [
                                                                                                                                                                                            0,
                                                                                                                                                                                            '"447533c820f972697b64d0219743ba931ffd4c7f"',
                                                                                                                                                                                            undef,
                                                                                                                                                                                            1,
                                                                                                                                                                                            1,
                                                                                                                                                                                            undef,
                                                                                                                                                                                            1,
                                                                                                                                                                                            {
                                                                                                                                                                                              'HttpOnly' => undef
                                                                                                                                                                                            }
                                                                                                                                                                                          ]
                                                                                                                                                               }
                                                                                                                                                      }
                                                                                                                                 }
                                                                                                                  }, 'HTTP::Cookies' ),
                                                                                           'def_headers' => bless( {
                                                                                                                     'user-agent' => 'VI Perl'
                                                                                                                   }, 'HTTP::Headers' ),
                                                                                           'proxy' => {},
                                                                                           'max_size' => undef
                                                                                         }, 'LWP::UserAgent' ),
                                                                  'url' => 'https://172.20.11.165:443/sdk/vimService.wsdl'
                                                                }, 'SoapClient' )
                                         }, 'VimService' ),
                 'service_content' => bless( {
                                               'hostProfileManager' => bless( {
                                                                                'value' => 'HostProfileManager',
                                                                                'type' => 'HostProfileManager'
                                                                              }, 'ManagedObjectReference' ),
                                               'eventManager' => bless( {
                                                                          'value' => 'EventManager',
                                                                          'type' => 'EventManager'
                                                                        }, 'ManagedObjectReference' ),
                                               'alarmManager' => bless( {
                                                                          'value' => 'AlarmManager',
                                                                          'type' => 'AlarmManager'
                                                                        }, 'ManagedObjectReference' ),
                                               'searchIndex' => bless( {
                                                                         'value' => 'SearchIndex',
                                                                         'type' => 'SearchIndex'
                                                                       }, 'ManagedObjectReference' ),
                                               'failoverClusterManager' => bless( {
                                                                                    'value' => 'FailoverClusterManager',
                                                                                    'type' => 'FailoverClusterManager'
                                                                                  }, 'ManagedObjectReference' ),
                                               'ovfManager' => bless( {
                                                                        'value' => 'OvfManager',
                                                                        'type' => 'OvfManager'
                                                                      }, 'ManagedObjectReference' ),
                                               'authorizationManager' => bless( {
                                                                                  'value' => 'AuthorizationManager',
                                                                                  'type' => 'AuthorizationManager'
                                                                                }, 'ManagedObjectReference' ),
                                               'taskManager' => bless( {
                                                                         'value' => 'TaskManager',
                                                                         'type' => 'TaskManager'
                                                                       }, 'ManagedObjectReference' ),
                                               'about' => bless( {
                                                                   'fullName' => 'VMware vCenter Server 6.5.0 build-17994927',
                                                                   'licenseProductVersion' => '6.0',
                                                                   'version' => '6.5.0',
                                                                   'apiVersion' => '6.5',
                                                                   'name' => 'VMware vCenter Server',
                                                                   'localeBuild' => '000',
                                                                   'build' => '17994927',
                                                                   'localeVersion' => 'INTL',
                                                                   'instanceUuid' => '1d2ced92-e41a-4f82-866b-7c5d2a1b5135',
                                                                   'apiType' => 'VirtualCenter',
                                                                   'licenseProductName' => 'VMware VirtualCenter Server',
                                                                   'osType' => 'linux-x64',
                                                                   'productLineId' => 'vpx',
                                                                   'vendor' => 'VMware, Inc.'
                                                                 }, 'AboutInfo' ),
                                               'overheadMemoryManager' => bless( {
                                                                                   'value' => 'OverheadMemoryManager',
                                                                                   'type' => 'OverheadMemoryManager'
                                                                                 }, 'ManagedObjectReference' ),
                                               'virtualDiskManager' => bless( {
                                                                                'value' => 'virtualDiskManager',
                                                                                'type' => 'VirtualDiskManager'
                                                                              }, 'ManagedObjectReference' ),
                                               'cryptoManager' => bless( {
                                                                           'value' => 'CryptoManager',
                                                                           'type' => 'CryptoManagerKmip'
                                                                         }, 'ManagedObjectReference' ),
                                               'certificateManager' => bless( {
                                                                                'value' => 'certificateManager',
                                                                                'type' => 'CertificateManager'
                                                                              }, 'ManagedObjectReference' ),
                                               'dvSwitchManager' => bless( {
                                                                             'value' => 'DVSManager',
                                                                             'type' => 'DistributedVirtualSwitchManager'
                                                                           }, 'ManagedObjectReference' ),
                                               'vmCompatibilityChecker' => bless( {
                                                                                    'value' => 'CompatChecker',
                                                                                    'type' => 'VirtualMachineCompatibilityChecker'
                                                                                  }, 'ManagedObjectReference' ),
                                               'perfManager' => bless( {
                                                                         'value' => 'PerfMgr',
                                                                         'type' => 'PerformanceManager'
                                                                       }, 'ManagedObjectReference' ),
                                               'snmpSystem' => bless( {
                                                                        'value' => 'SnmpSystem',
                                                                        'type' => 'HostSnmpSystem'
                                                                      }, 'ManagedObjectReference' ),
                                               'diagnosticManager' => bless( {
                                                                               'value' => 'DiagMgr',
                                                                               'type' => 'DiagnosticManager'
                                                                             }, 'ManagedObjectReference' ),
                                               'setting' => bless( {
                                                                     'value' => 'VpxSettings',
                                                                     'type' => 'OptionManager'
                                                                   }, 'ManagedObjectReference' ),
                                               'sessionManager' => bless( {
                                                                            'value' => 'SessionManager',
                                                                            'type' => 'SessionManager'
                                                                          }, 'ManagedObjectReference' ),
                                               'ipPoolManager' => bless( {
                                                                           'value' => 'IpPoolManager',
                                                                           'type' => 'IpPoolManager'
                                                                         }, 'ManagedObjectReference' ),
                                               'extensionManager' => bless( {
                                                                              'value' => 'ExtensionManager',
                                                                              'type' => 'ExtensionManager'
                                                                            }, 'ManagedObjectReference' ),
                                               'licenseManager' => bless( {
                                                                            'value' => 'LicenseManager',
                                                                            'type' => 'LicenseManager'
                                                                          }, 'ManagedObjectReference' ),
                                               'propertyCollector' => bless( {
                                                                               'value' => 'propertyCollector',
                                                                               'type' => 'PropertyCollector'
                                                                             }, 'ManagedObjectReference' ),
                                               'hostSpecManager' => bless( {
                                                                             'value' => 'HostSpecificationManager',
                                                                             'type' => 'HostSpecificationManager'
                                                                           }, 'ManagedObjectReference' ),
                                               'userDirectory' => bless( {
                                                                           'value' => 'UserDirectory',
                                                                           'type' => 'UserDirectory'
                                                                         }, 'ManagedObjectReference' ),
                                               'scheduledTaskManager' => bless( {
                                                                                  'value' => 'ScheduledTaskManager',
                                                                                  'type' => 'ScheduledTaskManager'
                                                                                }, 'ManagedObjectReference' ),
                                               'fileManager' => bless( {
                                                                         'value' => 'FileManager',
                                                                         'type' => 'FileManager'
                                                                       }, 'ManagedObjectReference' ),
                                               'rootFolder' => bless( {
                                                                        'value' => 'group-d1',
                                                                        'type' => 'Folder'
                                                                      }, 'ManagedObjectReference' ),
                                               'complianceManager' => bless( {
                                                                               'value' => 'MoComplianceManager',
                                                                               'type' => 'ProfileComplianceManager'
                                                                             }, 'ManagedObjectReference' ),
                                               'storageResourceManager' => bless( {
                                                                                    'value' => 'StorageResourceManager',
                                                                                    'type' => 'StorageResourceManager'
                                                                                  }, 'ManagedObjectReference' ),
                                               'vStorageObjectManager' => bless( {
                                                                                   'value' => 'VStorageObjectManager',
                                                                                   'type' => 'VcenterVStorageObjectManager'
                                                                                 }, 'ManagedObjectReference' ),
                                               'clusterProfileManager' => bless( {
                                                                                   'value' => 'ClusterProfileManager',
                                                                                   'type' => 'ClusterProfileManager'
                                                                                 }, 'ManagedObjectReference' ),
                                               'customFieldsManager' => bless( {
                                                                                 'value' => 'CustomFieldsManager',
                                                                                 'type' => 'CustomFieldsManager'
                                                                               }, 'ManagedObjectReference' ),
                                               'vmProvisioningChecker' => bless( {
                                                                                   'value' => 'ProvChecker',
                                                                                   'type' => 'VirtualMachineProvisioningChecker'
                                                                                 }, 'ManagedObjectReference' ),
                                               'ioFilterManager' => bless( {
                                                                             'value' => 'IoFilterManager',
                                                                             'type' => 'IoFilterManager'
                                                                           }, 'ManagedObjectReference' ),
                                               'guestOperationsManager' => bless( {
                                                                                    'value' => 'guestOperationsManager',
                                                                                    'type' => 'GuestOperationsManager'
                                                                                  }, 'ManagedObjectReference' ),
                                               'datastoreNamespaceManager' => bless( {
                                                                                       'value' => 'DatastoreNamespaceManager',
                                                                                       'type' => 'DatastoreNamespaceManager'
                                                                                     }, 'ManagedObjectReference' ),
                                               'viewManager' => bless( {
                                                                         'value' => 'ViewManager',
                                                                         'type' => 'ViewManager'
                                                                       }, 'ManagedObjectReference' ),
                                               'healthUpdateManager' => bless( {
                                                                                 'value' => 'HealthUpdateManager',
                                                                                 'type' => 'HealthUpdateManager'
                                                                               }, 'ManagedObjectReference' ),
                                               'localizationManager' => bless( {
                                                                                 'value' => 'LocalizationManager',
                                                                                 'type' => 'LocalizationManager'
                                                                               }, 'ManagedObjectReference' ),
                                               'serviceManager' => bless( {
                                                                            'value' => 'ServiceMgr',
                                                                            'type' => 'ServiceManager'
                                                                          }, 'ManagedObjectReference' ),
                                               'failoverClusterConfigurator' => bless( {
                                                                                         'value' => 'FailoverClusterConfigurator',
                                                                                         'type' => 'FailoverClusterConfigurator'
                                                                                       }, 'ManagedObjectReference' ),
                                               'customizationSpecManager' => bless( {
                                                                                      'value' => 'CustomizationSpecManager',
                                                                                      'type' => 'CustomizationSpecManager'
                                                                                    }, 'ManagedObjectReference' )
                                             }, 'ServiceContent' )
               }, 'Vim' );